name: Create Temporary Development Instance
run-name: ${{ github.actor }} is running GitHub Actions

on:
  push:
    branches: 
      - master

env:
  SSH_AUTH_SOCK: /tmp/ssh_agent.sock
  REMOTE_PATH_ON_LIGHTSAIL: /bitnami/wordpress
  SNAPSHOT_NAME: RWebsite_EPHEMERAL_SNAPSHOT-${{ github.run_number }} 
  EPHEMERAL_NAME: RWebsite_EPHEMERAL_ID-${{ github.run_number }}
  INSTANCE_NAME: WordPress-1

jobs:
  setup-development-instance:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    environment: stage
    steps:
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
          aws --version
      
      - name: Configure AWS Authentication
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::381492191481:role/Github_OIDC
          role-session-name: Github_OIDC
          aws-region: us-east-1
      
      - name: Confirm Role Assumption
        run: |
          aws sts get-caller-identity
      
      - name: Create Snapshot
        run: |
          aws lightsail create-instance-snapshot \
            --instance-snapshot-name ${{ env.SNAPSHOT_NAME }} \
            --instance-name ${{ env.INSTANCE_NAME }} \
            --query 'operations[0].resourceName' \
            --output text
      
      - name: Get Snapshot Status
        run: |
          SNAPSHOT_STATUS="pending"
          while [ $SNAPSHOT_STATUS == "pending" ]; do
              echo "$SNAPSHOT_STATUS"
              SNAPSHOT_STATUS=$(aws lightsail get-instance-snapshots \
                --query "instanceSnapshots[?name=='$SNAPSHOT_NAME'].state" \
                --output text)
              sleep 5
            done

      - name: Create Ephemeral Environment
        run: |
          aws lightsail create-instances-from-snapshot \
            --instance-name ${{ env.EPHEMERAL_NAME }} \
            --instance-snapshot-name ${{ env.SNAPSHOT_NAME }} \
            --availability-zone us-east-1a \
            --bundle-id nano_3_0 \
            --query 'operations[0].resourceName' \
            --output text

      - name: Get Ephemeral Environment Status
        run: |
          INSTANCE_STATUS="pending"
          while [ $INSTANCE_STATUS == "pending" ]; do
            echo "$INSTANCE_STATUS"
            INSTANCE_STATUS=$(aws lightsail get-instance \
              --instance-name ${{ env.EPHEMERAL_NAME }} \
              --query instance.state.name \
              --output text)
            sleep 5
          done
          
      - name: Get IP Address of Lightsail Instance
        run: |
          INSTANCE_IP=$(aws lightsail get-instance --instance-name ${{ env.EPHEMERAL_NAME }} --query instance.publicIpAddress --output text)
          echo "INSTANCE_IP=$INSTANCE_IP" >> $GITHUB_ENV
          echo "IP Address is: $INSTANCE_IP"

      - name: Add server to known_hosts
        run: |
          echo ${{ env.INSTANCE_IP }}
          set -e  #Ensure the script exits if any command fails
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          for i in {1..5}; do
            ssh-keyscan -H ${{ env.INSTANCE_IP }} >> ~/.ssh/known_hosts && break || { echo "ssh-keyscan failed"; exit 1; }
            sleep 5
          done
          chmod 644 ~/.ssh/known_hosts

      - name: Start SSH Agent
        uses: webfactory/ssh-agent@v0.9.0
        with: 
          ssh-private-key: ${{ secrets.STAGE_LIGHTSAIL_SSH_KEY }}
          
      - name: Run ssh And git pull 
        run: |
          ssh -t bitnami@${{ env.INSTANCE_IP}} /bin/bash << EOF
            cd ${{ env.REMOTE_PATH_ON_LIGHTSAIL }}
            git pull origin master
          EOF
      
      - name: Echo IP Addess
        run: |
          echo "https://$env.INSTANCE_IP/wp-login"